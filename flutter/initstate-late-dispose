import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const MyHomePage(
        title: 'lkjhlkjh',
      ),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});
  final String title;

  @override
  State<MyHomePage> createState() {
    return _MyHomePageState();
  }
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;
  late double v; //
  TextEditingController tc = TextEditingController(); //
  @override
  void initState() { //
    super.initState(); //
    print('hi');
    v = 23.434343;
  }

  @override
  void dispose() { //
    // objects are cleared here
    // it execute last in program
    tc.dispose();
    print("asdfg");
    super.dispose(); //
  }

  void _incrementCounter() { //
    setState(() {
      _counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Column(
        children: [
          TextField(
            // onSubmitted: (val){
            //   print(val);
            // },
            onSubmitted: (val) {
              print(val);
            },
          ),
          SizedBox(
            height: 20,
          ),
          TextField(
            textAlign: TextAlign.center,
            decoration: InputDecoration(
              labelText: 'Username', // Label text for the input field
              hintText: 'Enter your username', // Placeholder text
              prefixIcon: Icon(Icons.person), // Icon to display before the input field
              suffixIcon: Icon(Icons.check), // Icon to display after the input field
              border: OutlineInputBorder(
                // Border around the input field
                borderRadius: BorderRadius.circular(10.0),
              ),
              focusedBorder: OutlineInputBorder(
                // Border when the field is focused
                borderRadius: BorderRadius.circular(10.0),
                borderSide: BorderSide(color: Colors.blue),
              ),
              errorBorder: OutlineInputBorder(
                // Border when there's an error
                borderRadius: BorderRadius.circular(10.0),
                borderSide: BorderSide(color: Colors.red),
              ),
            ),
          )
        ],
      ),
    );
  }
}
